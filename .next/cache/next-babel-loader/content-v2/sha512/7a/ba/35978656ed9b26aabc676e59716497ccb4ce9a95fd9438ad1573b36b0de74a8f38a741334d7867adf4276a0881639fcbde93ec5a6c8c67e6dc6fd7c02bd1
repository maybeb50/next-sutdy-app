{"ast":null,"code":"import { Fragment as _Fragment } from \"react/jsx-dev-runtime\";\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nvar _jsxFileName = \"/Users/bora/Study/next-js/next-study-app/src/pages/blog/[id].js\";\nimport { useRouter } from 'next/router';\n\nfunction Post({\n  post\n}) {\n  return /*#__PURE__*/_jsxDEV(_Fragment, {\n    children: [/*#__PURE__*/_jsxDEV(\"h1\", {\n      children: \"Blog Post\"\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 7,\n      columnNumber: 13\n    }, this), \"/p>\", /*#__PURE__*/_jsxDEV(\"hr\", {}, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 8,\n      columnNumber: 13\n    }, this), /*#__PURE__*/_jsxDEV(\"h2\", {\n      children: post.title\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 9,\n      columnNumber: 13\n    }, this), /*#__PURE__*/_jsxDEV(\"p\", {\n      children: post.content\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 10,\n      columnNumber: 13\n    }, this)]\n  }, void 0, true);\n}\n\nexport async function getStaticPaths() {\n  const res = await fetch('https://jsonplaceholder.typicode.com/todos/');\n  const posts = await res.json();\n  const paths = posts.map(post => ({\n    params: {\n      id: post.id.toString()\n    }\n  }));\n  return {\n    paths,\n    fallback: false\n  };\n}\nexport async function getStaticProps({\n  params\n}) {\n  // params contains the post `id`.\n  // If the route is like /posts/1, then params.id is 1\n  const res = await fetch(`https://jsonplaceholder.typicode.com/todos/${params.id}`);\n  const post = await res.json(); // Pass post data to the page via props\n\n  return {\n    props: {\n      post\n    }\n  };\n}\nexport default Post;","map":{"version":3,"sources":["/Users/bora/Study/next-js/next-study-app/src/pages/blog/[id].js"],"names":["useRouter","Post","post","title","content","getStaticPaths","res","fetch","posts","json","paths","map","params","id","toString","fallback","getStaticProps","props"],"mappings":";;;AAAA,SAASA,SAAT,QAA0B,aAA1B;;AAEA,SAASC,IAAT,CAAc;AAAEC,EAAAA;AAAF,CAAd,EAAwB;AAEpB,sBACI;AAAA,4BACI;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,YADJ,sBAEI;AAAA;AAAA;AAAA;AAAA,YAFJ,eAGI;AAAA,gBAAKA,IAAI,CAACC;AAAV;AAAA;AAAA;AAAA;AAAA,YAHJ,eAII;AAAA,gBAAID,IAAI,CAACE;AAAT;AAAA;AAAA;AAAA;AAAA,YAJJ;AAAA,kBADJ;AAQH;;AAED,OAAO,eAAeC,cAAf,GAAgC;AACnC,QAAMC,GAAG,GAAG,MAAMC,KAAK,CAAC,6CAAD,CAAvB;AACA,QAAMC,KAAK,GAAG,MAAMF,GAAG,CAACG,IAAJ,EAApB;AAEA,QAAMC,KAAK,GAAGF,KAAK,CAACG,GAAN,CAAWT,IAAD,KAAW;AAC/BU,IAAAA,MAAM,EAAE;AACJC,MAAAA,EAAE,EAAEX,IAAI,CAACW,EAAL,CAAQC,QAAR;AADA;AADuB,GAAX,CAAV,CAAd;AAMA,SAAO;AACHJ,IAAAA,KADG;AAEHK,IAAAA,QAAQ,EAAE;AAFP,GAAP;AAID;AAED,OAAO,eAAeC,cAAf,CAA8B;AAAEJ,EAAAA;AAAF,CAA9B,EAA0C;AAC/C;AACA;AACA,QAAMN,GAAG,GAAG,MAAMC,KAAK,CAAE,8CAA6CK,MAAM,CAACC,EAAG,EAAzD,CAAvB;AACA,QAAMX,IAAI,GAAG,MAAMI,GAAG,CAACG,IAAJ,EAAnB,CAJ+C,CAM/C;;AACA,SAAO;AAAEQ,IAAAA,KAAK,EAAE;AAAEf,MAAAA;AAAF;AAAT,GAAP;AACD;AAED,eAAeD,IAAf","sourcesContent":["import { useRouter } from 'next/router';\n\nfunction Post({ post }) {\n\n    return(\n        <>\n            <h1>Blog Post</h1>/p>\n            <hr />\n            <h2>{post.title}</h2>\n            <p>{post.content}</p>\n        </>\n    )\n}\n\nexport async function getStaticPaths() {\n    const res = await fetch('https://jsonplaceholder.typicode.com/todos/');\n    const posts = await res.json();\n\n    const paths = posts.map((post) => ({\n        params: {\n            id: post.id.toString()\n        }\n    }))\n  \n    return {\n        paths, \n        fallback: false\n    }\n  }\n\n  export async function getStaticProps({ params }) {\n    // params contains the post `id`.\n    // If the route is like /posts/1, then params.id is 1\n    const res = await fetch(`https://jsonplaceholder.typicode.com/todos/${params.id}`)\n    const post = await res.json()\n  \n    // Pass post data to the page via props\n    return { props: { post } }\n  }\n  \n  export default Post;"]},"metadata":{},"sourceType":"module"}